# Generated by Django 4.1.7 on 2023-03-22 09:03

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('country_of_residence', models.CharField(max_length=350, verbose_name='Country of residence')),
                ('city', models.CharField(max_length=230, verbose_name='City')),
                ('address', models.CharField(max_length=400, verbose_name='Address')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('messenger', models.CharField(max_length=350, verbose_name='Messenger')),
                ('messenger_nickname', models.CharField(max_length=270, verbose_name='Messenger nickname')),
                ('is_advertiser', models.BooleanField(default=False, verbose_name='Is advertiser?')),
                ('is_publisher', models.BooleanField(default=False, verbose_name='Is publisher?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdvertiserAccount',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('short_desc', models.TextField(max_length=5000, verbose_name='Advertising campaign short description')),
                ('bonus_code', models.CharField(max_length=350, verbose_name='Bonus code')),
            ],
            options={
                'verbose_name': 'advertiser',
                'verbose_name_plural': 'Advertisers',
            },
        ),
        migrations.CreateModel(
            name='PublisherAccount',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('website', models.TextField(max_length=5000, verbose_name='Website')),
                ('traffic_amount', models.PositiveSmallIntegerField(choices=[(1, '<5k daily'), (2, '5-10k daily'), (3, '>10k daily')], verbose_name='Daily traffic amount')),
            ],
            options={
                'verbose_name': 'publisher',
                'verbose_name_plural': 'Publishers',
            },
        ),
    ]
